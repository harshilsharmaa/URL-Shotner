{"version":3,"sources":["components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","originalUrl","setOriginalUrl","shortUrl","setShortUrl","copyBtnValue","setCopyBtnValue","copied","setCopied","className","onSubmit","e","preventDefault","postOriginalUrl","a","axios","post","headers","data","window","location","href","urlId","type","label","onChange","target","value","length","style","color","background","border","onClick","navigator","clipboard","writeText","setInterval","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+SA2EeA,EAtEF,WAET,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAwCJ,mBAAS,QAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAwCF,OACE,sBAAKC,UAAU,OAAf,UACI,2CACA,wEAEA,uBAAMA,UAAU,OAAQC,SA1CP,SAACC,GAClBA,EAAEC,iBAEF,IAAMC,EAAe,uCAAG,8BAAAC,EAAA,sEAGCC,IAAMC,KAAK,WAAY,CAACf,eAAa,CACtDgB,QAAQ,CACJ,eAAe,sBALH,gBAGbC,EAHa,EAGbA,KAMPd,EAAYe,OAAOC,SAASC,KAAKH,EAAKI,OATlB,2CAAH,qDAWrBT,KA4BA,UACI,uBAAOU,KAAK,OAAOC,MAAM,YAAaC,SAAU,SAACd,GAAKT,EAAeS,EAAEe,OAAOC,UAC9E,gDAIAxB,GAAYA,EAASyB,OAAO,EAC5B,sBAAKnB,UAAU,UAAf,UAEI,6BAAKN,IACL,wBAAQM,UAAU,UAAUoB,MAAO,CAAEC,MAAOvB,EAAQ,OAAQ,GAAIwB,WAAYxB,EAAS,QAAU,UAAWyB,OAAQzB,EAAS,OAAS,IAAO0B,QAlCvJ,WAOIC,UAAUC,UAAUC,UAAUjC,GAG9BG,EAAgB,UAChBE,GAAU,GAEV6B,aAAY,WACR/B,EAAgB,QAChBE,GAAU,KACZ,MAkBM,SAA+JH,OAEhK,SCnDAiC,MAdf,WACE,OAEE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,WCGlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJd,M","file":"static/js/main.f57ab8c7.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nimport './Home.css'\r\nimport axios from 'axios'\r\n\r\nconst Home = () => {\r\n\r\n    const [originalUrl, setOriginalUrl] = useState('')\r\n\r\n    const [shortUrl, setShortUrl] = useState('')\r\n\r\n    const [copyBtnValue, setCopyBtnValue] = useState('Copy')\r\n    const [copied, setCopied] = useState(false)\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const postOriginalUrl = async () => {\r\n\r\n\r\n            const {data} = await axios.post('/shorten', {originalUrl},{\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                }\r\n            })\r\n            \r\n            setShortUrl(window.location.href+data.urlId);\r\n        }\r\n        postOriginalUrl();\r\n\r\n    }\r\n\r\n    function copyText() {\r\n\r\n        /* Select the text field */\r\n        // shortUrl.select();\r\n        // shortUrl.setSelectionRange(0, 99999); /* For mobile devices */\r\n      \r\n         /* Copy the text inside the text field */\r\n        navigator.clipboard.writeText(shortUrl);\r\n      \r\n\r\n        setCopyBtnValue('Copied');\r\n        setCopied(true);\r\n        \r\n        setInterval(() => {\r\n            setCopyBtnValue('Copy');\r\n            setCopied(false);\r\n        },3000)\r\n      }\r\n\r\n  return (\r\n    <div className='home'>\r\n        <h2>Urliy.com</h2>\r\n        <p>Shorten Your Long Ugly URL ðŸ¤ª</p>\r\n\r\n        <form className=\"form\"  onSubmit={handleSubmit}>\r\n            <input type=\"text\" label=\"Enter URL\"  onChange={(e)=>{setOriginalUrl(e.target.value)}}/>\r\n            <button>Shorten</button>\r\n        </form>\r\n\r\n        {\r\n            shortUrl && shortUrl.length>0 ? (\r\n            <div className=\"showUrl\">\r\n\r\n                <h3>{shortUrl}</h3> \r\n                <button className='copyBtn' style={{ color: copied? \"#fff\": \"\", background: copied ? \"green\" : \"#03031f\", border: copied ? \"none\" : \"\" }}  onClick={copyText}>{copyBtnValue}</button>\r\n            </div>\r\n            ): null\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import {BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n   \n    <Router>\n      <Routes>\n        <Route path='/' element={<Home/>} ></Route>\n      </Routes>\n\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}